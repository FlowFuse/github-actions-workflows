name: 'Scan container image'
description: 'Scan container image for vulnerabilities with Trivy and publish results'

inputs:
  image_ref:
    description: 'Container image ref to scan.'
    required: true
  check_name:
    description: 'A name for the check result.'
    required: false
    default: 'Container image scan results'
  severity:
    description: 'Severities of security issues to be displayed.'
    required: false
    default: 'CRITICAL,HIGH,MEDIUM'
  security_checks:
    description: 'Comma-separated list of what security issues to detect (vuln,secret,config).'
    required: false
    default: 'vuln,config,secret'
  soft_fail:
    description: 'Specify if scanning soft fail is enabled.'
    required: false
    default: 'true'
  vulnerabilities_db_repository:
    description: 'Trivy DB repository.'
    required: false
    default: 'ghcr.io/aquasecurity/trivy-db'

runs:
  using: "composite"
  steps:
    - name: Set variables
      shell: bash
      run: |
        if [[ ${{ inputs.soft_fail  == 'true'}} ]] ; then
          echo "trivy_exit_code=0" >> $GITHUB_ENV
        else
          echo "trivy_exit_code=1" >> $GITHUB_ENV
        fi

    - name: Scan container image for vulnerabilities
      uses: aquasecurity/trivy-action@0.24.0
      env:
        TRIVY_DB_REPOSITORY: ${{ inputs.vulnerabilities_db_repository }}
      with:
        image-ref: '${{ inputs.image_ref }}'
        format: 'sarif'
        output: '${{ inputs.check_name }}-trivy-results.sarif'
        exit-code: '${{ env.trivy_exit_code }}'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: '${{ inputs.severity }}'
        scanners: '${{ inputs.security_checks }}'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: '${{ inputs.check_name }}-trivy-results.sarif'
        category: '${{ inputs.check_name }} scanning'
