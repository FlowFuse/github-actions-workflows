name: Deploy helm chart to EKS cluster

on:
  workflow_call:
    inputs:
      deploy_branch:
        description: 'Branch from which helm chart will be installed'
        type: string
        required: false
        default: 'main'
      environment:
        description: 'Environment to deploy to'
        type: string
        required: true
      cluster_region:
        description: 'AWS region of the EKS cluster'
        type: string
        required: false
        default: 'eu-west-1'
      iam_role_name:
        description: 'Name of the IAM role to assume'
        type: string
        required: false
        default: 'K8sAdmin'
      chart_action:
        description: 'Helm action to perform'
        type: string
        required: false
        default: 'install'
      chart_repository:
        description: 'Helm chart repository'
        type: string
        required: true
      chart_path:
        description: 'Path to the Helm chart'
        type: string
        required: true
      chart_values_file:
        description: 'Path to the Helm chart values file'
        type: string
        required: false
      chart_values:
        description: 'Comma separated list of value set for helms. Example: "key1=value1,key2=value2"'
        type: string
        required: false
        default: null
      chart_namespace:
        description: 'Kubernetes namespace where chart will be deployed'
        type: string
        required: false
        default: 'default'
      chart_name:
        description: 'The name of the helm release'
        type: string
        required: true
      chart_version:
        description: 'The version of the helm chart'
        type: string
        required: true
      chart_timeout:
        description: 'The timeout for the helm chart deployment'
        type: string
        required: false
        default: '300s'
      kubectl_version:
        description: 'kubectl version'
        type: string
        required: false
        default: 'v1.23.4'
      validate_url:
        description: 'The url(s) to validate after deployment. Multiple values example: "https://example.com|http://example.net"'
        type: string
        required: false
    secrets:
      aws_account_id:
        description: 'AWS account ID'
        required: true
      cluster_name:
        description: 'EKS cluster name'
        required: true
      chart_secret_values:
        description: 'Comma separated list of value set for helms which should not be exposed in runner logs. Example: "key1=value1,key2=value2"'
        required: false

jobs:
  diff:
    runs-on: ubuntu-latest
    if: ${{ !contains(format('{0}/{1}', 'refs/heads', inputs.deploy_branch ), github.ref ) }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install Helm Diff plugin
        run: |
          helm plugin install https://github.com/databus23/helm-diff

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: ${{ inputs.kubectl_version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.cluster_region }}
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ inputs.iam_role_name }}
          role-session-name: GithubActionsRoleSession
          role-duration-seconds: 900
  
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ inputs.cluster_region }} --name ${{ secrets.cluster_name }}

      - name: Set inline chart values
        id: prepare_values
        run: |
          values=""
          if [ -n "${{ inputs.chart_values }}" ]; then
            values="${{ inputs.chart_values }}"
          fi
          if [ -n "${{ secrets.chart_secret_values }}" ]; then
            values="${values:+${values},}${{ secrets.chart_secret_values }}"
          fi
          echo "values=${values}" >> $GITHUB_ENV

      - name: Set chart repository name
        run: |
          chart_path="${{ inputs.chart_path }}"
          chart_repo_name="${chart_path%%/*}"
          echo "chart_repo_name=${chart_repo_name}" >> $GITHUB_ENV

      - name: Add chart's repository
        run: |
          helm repo add ${{ env.chart_repo_name }} ${{ inputs.chart_repository }}
          helm repo update

      - name: Run Helm diff
        id: helm_diff
        run: |
          if [ -n "${{ steps.prepare_values.outputs.values }}" ]; then
            helm diff upgrade ${{ inputs.chart_name }} ${{ inputs.chart_path }} --version ${{ inputs.chart_version }} --values ${{ inputs.chart_values_file }} --set ${{ steps.prepare_values.outputs.values }} --namespace ${{ inputs.chart_namespace }}
          else
            helm diff upgrade ${{ inputs.chart_name }} ${{ inputs.chart_path }} --version ${{ inputs.chart_version }} --values ${{ inputs.chart_values_file }} --namespace ${{ inputs.chart_namespace }}
          fi

      - name: Create PR comment
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const output = `${{ steps.helm_diff.outputs.stdout }}`
            const issue_number = context.payload.pull_request.number
            const owner = context.repo.owner
            const repo = context.repo.repo
            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: issue_number,
              body: output
            })
    
  deploy:
    runs-on: ubuntu-latest
    if: ${{ contains(format('{0}/{1}', 'refs/heads', inputs.deploy_branch ), github.ref ) }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ inputs.cluster_region }}
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ inputs.iam_role_name }}
          role-session-name: GithubActionsRoleSession
          role-duration-seconds: 900

      - name: Set chart values
        run: |
          if [ "${{ secrets.chart_secret_values }}" == "" ]
          then
            echo "VALUES=${{ inputs.chart_values }}" >> $GITHUB_ENV
          else
            echo "VALUES=${{ format('{0},{1}', secrets.chart_secret_values, inputs.chart_values) }}" >> $GITHUB_ENV
          fi

      - name: Deploy Helm
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.8
        with:
          action: ${{ inputs.chart_action }}
          aws-region: ${{ inputs.cluster_region }}
          cluster-name: ${{ secrets.cluster_name }}
          chart-repository: ${{ inputs.chart_repository }}
          chart-path: ${{ inputs.chart_path }}
          config-files: ${{ inputs.chart_values_file }}
          values: ${{ env.VALUES }}
          namespace: ${{ inputs.chart_namespace }}
          name: ${{ inputs.chart_name }}
          version: ${{ inputs.chart_version }}
          atomic: true
          helm-wait: true
          timeout: ${{ inputs.chart_timeout }}

      - name: Validate deployment
        if: ${{ inputs.validate_url != '' }}
        uses: jtalk/url-health-check-action@v3
        with:
          url: ${{ inputs.validate_url }}
          follow-redirect: true
          max-attempts: 3
          retry-delay: 10s
          retry-all: false
