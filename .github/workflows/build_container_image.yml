name: Build container image

on:
  workflow_call:
    inputs:
      package_dependencies:
        description: 'List of dependencies to update'
        type: string
        required: false
        default: ''
      registry_name:
        description: 'Name of the registry to push the image to'
        type: string
        required: true
      build_context:
        description: 'Path to the build context'
        type: string
        required: true
      build_arguments:
        description: 'Build arguments to pass to the image build step'
        type: string
        required: false
        default: ''
      build_platforms:
          description: 'Platforms to build the image for'
          type: string
          required: false
          default: |- 
            linux/amd64
            linux/arm64
      dockerfile_path:
        description: 'Path to the Dockerfile, within $build_context, used for image build'
        type: string
        required: false
        default: 'Dockerfile'
      push_image:
        type: boolean
        default: true
      
      

jobs:
  container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Set release name and image tag
        run: | 
          echo "release_name=nightly" >> $GITHUB_ENV
          echo "image_tag=nightly-$(date +%Y%m%d%H%m%S)" >> $GITHUB_ENV

      - name: Set dependecies versions
        if: ${{ inputs.package_dependencies != '' }}
        working-directory: ${{ inputs.working_directory }}
        run: |
          for dependency in $(echo "${{ inputs.package_dependencies }}" | tr '\n' ' ')
          do
            echo "Updating $dependency to ${{ env.release_name }}"
            cat package.json | jq ".dependencies[\"$dependency\"] = \"${{ env.release_name }}\"" > package.json-patched
            mv package.json-patched package.json
          done
          cat package.json
      
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.build_context }}
          file: "${{ inputs.build_context }}/${{ inputs.dockerfile_path }}}"
          tags: "${{ inputs.registry_name }}:${{ env.image_tag }}"
          platforms: ${{ inputs.platforms }}
          build-args: ${{ inputs.build_arguments }}
          load: true
          push: false
          
      - name: Scan container image for vulnerabilities
        uses: flowforge/github-actions-workflows/actions/scan-container-image@main
        with:
          image_ref: "${{ inputs.registry_name }}:${{ env.image_tag }}"

      - name: Configure AWS credentials
        if: ${{ env.release_name == 'nightly' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_KEY }}
          aws-region: eu-west-1
  
      - name: "Login to Staging ECR"
        if: ${{ env.release_name == 'nightly' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Push container image
        if: ${{ inputs.push_image == true }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.build_context }}
          file: "${{ inputs.build_context }}/${{ inputs.dockerfile_path }}}"
          tags: "${{ inputs.registry_name }}:${{ env.image_tag }}"
          platforms: ${{ inputs.platforms }}
          build-args: ${{ inputs.build_arguments }}
          push: true
      