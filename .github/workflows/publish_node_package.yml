name: Build and publish npm package

on:
  workflow_call:
    inputs:
      package_name:
        description: 'Name of the package to publish'
        type: string
        required: true
      release_name:
        description: 'Name of the release.'
        type: string
        required: false
      package_dependencies:
        description: 'List of dependencies to update'
        type: string
        required: false
        default: ''
      build_package:
        description: 'Build package before publishing'
        required: false
        type: boolean
        default: false
      publish_package:
        description: 'Publish package to private registry'
        required: false
        type: boolean
        default: false
      disable_ignore_scripts_on_publish:
        description: 'If false, add --ignore-scripts flag to npm publish command'
        required: false
        type: boolean
        default: false
      working_directory:
        description: 'Working directory'
        required: false
        type: string
        default: '.'
      npm_registry_url:
        description: 'NPM registry URL'
        required: false
        type: string
        default: 'https://registry.npmjs.org/'
    secrets:
      npm_registry_token:
        description: 'NPM registry authentication token'
        required: true
      sentry_auth_token:
        description: 'Sentry authentication token'
        required: false
      sentry_organisation:
        description: 'Sentry organisation name'
        required: false
      sentry_project:
        description: 'Sentry project name'
        required: false
    outputs:
      release_name:
        description: 'Name of the release.'
        value: ${{ jobs.buildAndPublish.outputs.release_name }}


jobs:
  buildAndPublish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      release_name: ${{ env.release_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set release name
        id: set_release_name
        run: |
          if [ -z "${{ inputs.release_name }}" ]; then
            echo "release_name=nightly" >> $GITHUB_ENV
          else
            echo "release_name=${{ inputs.release_name }}" >> $GITHUB_ENV
          fi

      - name: "Set package version"
        working-directory: ${{ inputs.working_directory }}
        run: |
          npm version prerelease --preid `git rev-parse --short HEAD`-`date +%Y%m%d%H%M` --no-git-tag-version

      - name: Set dependecies versions
        if: ${{ inputs.package_dependencies != '' }}
        working-directory: ${{ inputs.working_directory }}
        run: |
          for dependency in $(echo "${{ inputs.package_dependencies }}" | tr '\n' ' ')
          do
            echo "Updating $dependency to ${{ env.release_name }}"
            cat package.json | jq ".dependencies[\"$dependency\"] = \"${{ env.release_name }}\"" > package.json-patched
            mv package.json-patched package.json
          done
          cat package.json  
      
      - name: Configure node
        if: |
          inputs.publish_package ||
          inputs.build_package
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: '${{ inputs.npm_registry_url }}'
          scope: '@flowforge'
          always-auth: true

      - name: Build package
        if: ${{ inputs.build_package }}
        run: |
          npm install --@flowforge:registry=${{ inputs.npm_registry_url }}
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_registry_token }}
          SENTRY_AUTH_TOKEN: ${{ secrets.sentry_auth_token }}
          SENTRY_ORG: ${{ secrets.sentry_organisation }}
          SENRTY_PROJECT: ${{ secrets.sentry_project }}
      
      - name: Set package publish parameters
        if: ${{ inputs.publish_package }}
        run: |
          if [ ${{ inputs.disable_ignore_scripts_on_publish }} == 'false' ]; then
            echo "NPM_PUBLISH_PARAMETERS=--ignore-scripts" >> $GITHUB_ENV
          fi

      - name: Publish package
        if: ${{ inputs.publish_package }}
        working-directory: ${{ inputs.working_directory }}
        run: |
          npm publish ${{ env.NPM_PUBLISH_PARAMETERS }} --tag ${{ env.release_name }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_registry_token }}
